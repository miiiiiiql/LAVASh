// <auto-generated />
using System;
using LAVASh.DBmodels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LAVASh.Migrations
{
    [DbContext(typeof(DBcontext))]
    [Migration("20220430114421_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LAVASh.DBmodels.HeadSubordinate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("HeadId")
                        .HasColumnType("int");

                    b.Property<int?>("SubordinateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HeadId")
                        .IsUnique();

                    b.HasIndex("SubordinateId");

                    b.ToTable("HeadSubordinates");
                });

            modelBuilder.Entity("LAVASh.DBmodels.Place", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("HelpStrings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Place");
                });

            modelBuilder.Entity("LAVASh.DBmodels.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndOfDoing")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExecutorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Periodly")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlaceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeToDo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ExecutorId");

                    b.HasIndex("PlaceId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("LAVASh.DBmodels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HeadId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Secondname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@mail.ru",
                            HeadId = 0,
                            IsAdmin = true,
                            Password = "123456"
                        });
                });

            modelBuilder.Entity("LAVASh.DBmodels.HeadSubordinate", b =>
                {
                    b.HasOne("LAVASh.DBmodels.User", "Head")
                        .WithOne("UserHead")
                        .HasForeignKey("LAVASh.DBmodels.HeadSubordinate", "HeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LAVASh.DBmodels.User", "Subordinate")
                        .WithMany("UserSubordinate")
                        .HasForeignKey("SubordinateId");

                    b.Navigation("Head");

                    b.Navigation("Subordinate");
                });

            modelBuilder.Entity("LAVASh.DBmodels.Task", b =>
                {
                    b.HasOne("LAVASh.DBmodels.User", "Author")
                        .WithMany("AuthorOfTasks")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("LAVASh.DBmodels.User", "Executor")
                        .WithMany("HisTasks")
                        .HasForeignKey("ExecutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LAVASh.DBmodels.Place", "Place")
                        .WithMany("Tasks")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Executor");

                    b.Navigation("Place");
                });

            modelBuilder.Entity("LAVASh.DBmodels.Place", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("LAVASh.DBmodels.User", b =>
                {
                    b.Navigation("AuthorOfTasks");

                    b.Navigation("HisTasks");

                    b.Navigation("UserHead")
                        .IsRequired();

                    b.Navigation("UserSubordinate");
                });
#pragma warning restore 612, 618
        }
    }
}
